{"version":3,"file":"component---src-templates-single-tsx-32fe69028d086ca4cb18.js","mappings":"wLAqDA,UA7CgC,SAAC,GAAgB,IAAD,kCAAZA,EAAY,EAAZA,KAChC,OACI,gCACI,gBAAC,IAAD,CAAKC,OAAQ,UAAAD,EAAKE,sBAAL,mBAAqBC,mBAArB,eAAkCF,QAAS,KACxD,gBAAC,IAAD,KACI,yCACA,8CAAaD,EAAKE,sBAAlB,iBAAa,EAAqBC,mBAAlC,aAAa,EAAkCF,OAC/C,4CAAWD,EAAKE,sBAAhB,iBAAW,EAAqBC,mBAAhC,aAAW,EAAkCC,MAC7C,4CAAWJ,EAAKE,sBAAhB,iBAAW,EAAqBG,cAAhC,aAAW,EAA6BC,MACxC,+CAAcN,EAAKE,sBAAnB,aAAc,EAAqBK,SACnC,2CACMP,EAAKE,sBADX,iBACM,EAAqBC,mBAD3B,iBACM,EAAkCK,YADxC,aACM,EAAwCC,KAAK,SAAEC,EAAKC,GAAP,OAC3C,gBAAC,EAAAC,KAAD,CAAMC,GAAE,SAAaH,EAASI,IAAMH,EAAII,UAAU,+CAAgDL,OAG1G,qCACI,gBAAC,EAAAE,KAAD,CAAMC,GAAE,0BAAmBb,EAAKE,sBAAxB,iBAAmB,EAAqBC,mBAAxC,aAAmB,EAAkCa,cAAkBD,UAAU,+CAAzF,UAAyIf,EAAKE,sBAA9I,iBAAyI,EAAqBC,mBAA9J,aAAyI,EAAkCc,WAE/K,mCAEI,uBAAKC,wBAA0B,CAAEC,QAAQ,UAAAnB,EAAKE,sBAAL,eAAqBkB,OAAQ","sources":["webpack://gatsby-starter-default/./src/templates/Single.tsx"],"sourcesContent":["import React from 'react';\nimport { graphql, Link } from 'gatsby';\nimport { SingleQuery } from '@/../types/graphql-types';\nimport { Base } from '@layouts/Base';\nimport { Seo } from '@components/Seo';\ntype Props = {\n    data: SingleQuery;\n};\nconst Single: React.FC<Props> = ( { data } ) => {\n    return (\n        <>\n            <Seo title={ data.markdownRemark?.frontmatter?.title || '' } />\n            <Base>\n                <h1>Single page</h1>\n                <h2>title: { data.markdownRemark?.frontmatter?.title }</h2>\n                <p>date: { data.markdownRemark?.frontmatter?.date }</p>\n                <p>slug: { data.markdownRemark?.fields?.slug }</p>\n                <p>excerpt: { data.markdownRemark?.excerpt }</p>\n                <p>tags:\n                    { data.markdownRemark?.frontmatter?.tags?.map( ( tag, i ) => (\n                        <Link to={ `/tags/${ tag }` } key={ i } className='text-blue-500 hover:text-blue-400 font-bold'>{ tag }</Link>\n                    ) ) }\n                </p>\n                <p>category:\n                    <Link to={ `/categories/${ data.markdownRemark?.frontmatter?.categoryslug }` } className='text-blue-500 hover:text-blue-400 font-bold'>{ data.markdownRemark?.frontmatter?.category }</Link>\n                </p>\n                <div>\n                    html:\n                    <div dangerouslySetInnerHTML={ { __html: data.markdownRemark?.html || '' } } />\n                </div>\n            </Base>\n        </>\n    );\n}\nexport const pageQuery = graphql`\n    query Single ( $slug: String ) {\n        markdownRemark( fields: { slug: { eq: $slug } } ) {\n            html\n            htmlAst\n            excerpt( format: PLAIN, pruneLength: 120 )\n            frontmatter {\n                title\n                date( formatString: \"MM DD, YYYY\" )\n                category\n                categoryslug\n                tags\n            }\n            fields {\n                slug\n            }\n        }\n    }\n`;\nexport default Single;\n"],"names":["data","title","markdownRemark","frontmatter","date","fields","slug","excerpt","tags","map","tag","i","Link","to","key","className","categoryslug","category","dangerouslySetInnerHTML","__html","html"],"sourceRoot":""}
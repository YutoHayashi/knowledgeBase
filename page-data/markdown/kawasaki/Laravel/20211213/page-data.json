{
    "componentChunkName": "component---src-templates-single-tsx",
    "path": "/markdown/kawasaki/Laravel/20211213/",
    "result": {"data":{"post":{"html":"<p>復習も兼ねて</p>\n<p>◆create<br>\n・インスタンスの作成 → 属性の代入 → データの保存を一貫して行える。<br>\n・created_atとupdated_atも自動で入る。</p>\n<p>　・多次元配列はforeachを使うなどをして分割してから処理する必要がある。</p>\n<p>◆insert<br>\n・SQLで直にインサートする。<br>\n・モデルインスタンスを通さないため、エスケープされないなどセキュリティ的に危険がある。</p>\n<p>　・created_atとupdated_atも手動で入れる必要がある。<br>\n・多次元配列をまとめて処理できる。<br>\n・ユーザーから入力される可能性がないseederファイルなどで有効。</p>\n<p>◆まとめ<br>\nユーザーからの入力値を扱う場合はcreate、seederなど固定データをまとめて処理する場合はinsertも有効。</p>","htmlAst":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"復習も兼ねて"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"◆create"},{"type":"element","tagName":"br","properties":{},"children":[]},{"type":"text","value":"\n・インスタンスの作成 → 属性の代入 → データの保存を一貫して行える。"},{"type":"element","tagName":"br","properties":{},"children":[]},{"type":"text","value":"\n・created_atとupdated_atも自動で入る。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　・多次元配列はforeachを使うなどをして分割してから処理する必要がある。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"◆insert"},{"type":"element","tagName":"br","properties":{},"children":[]},{"type":"text","value":"\n・SQLで直にインサートする。"},{"type":"element","tagName":"br","properties":{},"children":[]},{"type":"text","value":"\n・モデルインスタンスを通さないため、エスケープされないなどセキュリティ的に危険がある。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　・created_atとupdated_atも手動で入れる必要がある。"},{"type":"element","tagName":"br","properties":{},"children":[]},{"type":"text","value":"\n・多次元配列をまとめて処理できる。"},{"type":"element","tagName":"br","properties":{},"children":[]},{"type":"text","value":"\n・ユーザーから入力される可能性がないseederファイルなどで有効。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"◆まとめ"},{"type":"element","tagName":"br","properties":{},"children":[]},{"type":"text","value":"\nユーザーからの入力値を扱う場合はcreate、seederなど固定データをまとめて処理する場合はinsertも有効。"}]}],"data":{"quirksMode":false}},"excerpt":"復習も兼ねて ◆create 　・インスタンスの作成 → 属性の代入 → データの保存を一貫して行える。 　・created_atとupdated_atも自動で入る。 　・多次元配列はforeach…","frontmatter":{"title":"【Laravel】createとinsertの違い","date":"12 13, 2021","category":"リファレンス","tags":["Laravel"]},"fields":{"slug":"/markdown/kawasaki/Laravel/20211213/"}}},"pageContext":{"slug":"/markdown/kawasaki/Laravel/20211213/"}},
    "staticQueryHashes": ["1898098588","2059598792","2070179686","63159454"]}